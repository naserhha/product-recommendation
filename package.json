{
  "name": "product-recommendation-system",
  "version": "1.0.0",
  "description": "A comprehensive product recommendation system for WooCommerce",
  "main": "assets/js/script.js",
  "scripts": {
    "dev": "npm run build:dev",
    "build": "npm run build:prod",
    "build:dev": "webpack --mode development --watch",
    "build:prod": "webpack --mode production",
    "build:css": "sass assets/css/style.scss:assets/css/style.css --style compressed",
    "build:css:dev": "sass assets/css/style.scss:assets/css/style.css --watch",
    "build:admin": "webpack --mode production --config webpack.admin.config.js",
    "build:admin:dev": "webpack --mode development --config webpack.admin.config.js --watch",
    "lint": "eslint assets/js/**/*.js",
    "lint:fix": "eslint assets/js/**/*.js --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "clean": "rimraf dist build",
    "prebuild": "npm run clean",
    "postbuild": "npm run build:css",
    "analyze": "webpack --mode production --analyze",
    "serve": "webpack serve --mode development",
    "check": "npm run lint && npm run test",
    "precommit": "npm run check",
    "release": "npm run build && npm run test"
  },
  "keywords": [
    "wordpress",
    "plugin",
    "woocommerce",
    "product",
    "recommendation",
    "ecommerce",
    "form",
    "questionnaire",
    "javascript",
    "css",
    "sass"
  ],
  "author": {
    "name": "Mohammad Nasser Haji Hashemabad",
    "email": "support@mohammadnasser.com",
    "url": "https://mohammadnasser.com"
  },
  "license": "GPL-2.0-or-later",
  "repository": {
    "type": "git",
    "url": "https://github.com/nasserhaji/product-recommendation.git"
  },
  "bugs": {
    "url": "https://github.com/nasserhaji/product-recommendation/issues"
  },
  "homepage": "https://github.com/nasserhaji/product-recommendation#readme",
  "devDependencies": {
    "@babel/core": "^7.22.0",
    "@babel/preset-env": "^7.22.0",
    "@babel/preset-react": "^7.22.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/user-event": "^14.4.3",
    "@wordpress/eslint-plugin": "^14.0.0",
    "autoprefixer": "^10.4.14",
    "babel-loader": "^9.1.2",
    "browser-sync": "^2.29.3",
    "browser-sync-webpack-plugin": "^2.3.0",
    "clean-webpack-plugin": "^4.0.0",
    "copy-webpack-plugin": "^11.0.0",
    "css-loader": "^6.8.1",
    "css-minimizer-webpack-plugin": "^5.0.1",
    "eslint": "^8.42.0",
    "eslint-config-wordpress": "^2.0.0",
    "eslint-loader": "^4.0.2",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.3",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "mini-css-extract-plugin": "^2.7.6",
    "postcss": "^8.4.24",
    "postcss-loader": "^7.3.3",
    "rimraf": "^5.0.1",
    "sass": "^1.63.6",
    "sass-loader": "^13.3.2",
    "style-loader": "^3.3.3",
    "terser-webpack-plugin": "^5.3.9",
    "url-loader": "^4.1.1",
    "webpack": "^5.88.0",
    "webpack-bundle-analyzer": "^4.8.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1",
    "webpack-merge": "^5.9.0"
  },
  "dependencies": {
    "jquery": "^3.7.0",
    "lodash": "^4.17.21"
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead",
    "not ie 11"
  ],
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ],
    "moduleNameMapping": {
      "\\.(css|less|scss|sass)$": "identity-obj-proxy",
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/tests/__mocks__/fileMock.js"
    },
    "collectCoverageFrom": [
      "assets/js/**/*.js",
      "!assets/js/**/*.test.js",
      "!assets/js/**/*.spec.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "eslintConfig": {
    "extends": [
      "wordpress",
      "eslint:recommended"
    ],
    "env": {
      "browser": true,
      "es6": true,
      "jquery": true
    },
    "parserOptions": {
      "ecmaVersion": 2020,
      "sourceType": "module"
    },
    "rules": {
      "indent": ["error", 2],
      "quotes": ["error", "single"],
      "semi": ["error", "always"],
      "no-unused-vars": "warn",
      "no-console": "warn"
    }
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "indentation": 2,
      "string-quotes": "single",
      "no-duplicate-selectors": true,
      "color-hex-case": "lower",
      "color-hex-length": "short",
      "color-named": "never",
      "selector-max-id": 0,
      "selector-combinator-space-after": "always",
      "selector-attribute-quotes": "always",
      "selector-attribute-operator-space-before": "never",
      "selector-attribute-operator-space-after": "never",
      "selector-attribute-brackets-space-inside": "never",
      "declaration-block-trailing-semicolon": "always",
      "declaration-colon-space-before": "never",
      "declaration-colon-space-after": "always",
      "property-no-vendor-prefix": true,
      "value-no-vendor-prefix": true,
      "number-leading-zero": "always",
      "function-url-quotes": "always",
      "font-weight-notation": "numeric",
      "font-family-name-quotes": "always-where-required",
      "comment-whitespace-inside": "always",
      "comment-empty-line-before": "always",
      "rule-empty-line-before": "always-multi-line",
      "selector-pseudo-element-colon-notation": "double",
      "selector-pseudo-class-parentheses-space-inside": "never",
      "media-feature-range-operator-space-before": "always",
      "media-feature-range-operator-space-after": "always",
      "media-feature-parentheses-space-inside": "never",
      "media-feature-colon-space-before": "never",
      "media-feature-colon-space-after": "always"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run precommit",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
} 